{"version":3,"file":"movablecoord.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ff004d929bd8834316f5","webpack:///src/consts.js","webpack:///src/browser.js","webpack:///src/Coordinate.js","webpack:///src/utils.js","webpack:///src/MovableCoord.js","webpack:///src/HammerManager.js","webpack:///src/animationHandler.js","webpack:///src/eventHandler.js","webpack:///src/index.js","webpack:///external {\"commonjs\":\"@egjs/component\",\"commonjs2\":\"@egjs/component\",\"amd\":\"@egjs/component\",\"root\":[\"eg\",\"Component\"]}","webpack:///external {\"commonjs\":\"hammerjs\",\"commonjs2\":\"hammerjs\",\"amd\":\"hammerjs\",\"root\":\"Hammer\"}"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@egjs/component\"), require(\"hammerjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MovableCoord\", [\"@egjs/component\", \"hammerjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovableCoord\"] = factory(require(\"@egjs/component\"), require(\"hammerjs\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"MovableCoord\"] = factory(root[\"eg\"][\"Component\"], root[\"Hammer\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ff004d929bd8834316f5","import {window} from \"./browser\";\n\n/**\n * @name eg.MovableCoord.DIRECTION_NONE\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_LEFT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_RIGHT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_UP\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_DOWN\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_HORIZONTAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_VERTICAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_ALL\n * @constant\n * @type {Number}\n*/\nconst direction = {\n\tDIRECTION_NONE: 1,\n\tDIRECTION_LEFT: 2,\n\tDIRECTION_RIGHT: 4,\n\tDIRECTION_UP: 8,\n\tDIRECTION_DOWN: 16,\n\tDIRECTION_HORIZONTAL: 2 | 4,\n\tDIRECTION_VERTICAL: 8 | 16,\n};\n\ndirection.DIRECTION_ALL = direction.DIRECTION_HORIZONTAL |\n\tdirection.DIRECTION_VERTICAL;\nexport const DIRECTION = direction;\nexport const UNIQUEKEY = \"__MOVABLECOORD__\";\nexport const SUPPORT_TOUCH = \"ontouchstart\" in window;\n\n\n\n\n// WEBPACK FOOTER //\n// src/consts.js","/* eslint-disable no-new-func, no-nested-ternary */\nconst win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nexport {win as window};\nexport const document = win.document;\n\n\n\n// WEBPACK FOOTER //\n// src/browser.js","import {DIRECTION} from \"./consts\";\n\nconst Coordinate = {\n\t// get user's direction\n\tgetDirectionByAngle(angle, thresholdAngle) {\n\t\tif (thresholdAngle < 0 || thresholdAngle > 90) {\n\t\t\treturn DIRECTION.DIRECTION_NONE;\n\t\t}\n\t\tconst toAngle = Math.abs(angle);\n\n\t\treturn toAngle > thresholdAngle && toAngle < 180 - thresholdAngle ?\n\t\t\t\tDIRECTION.DIRECTION_VERTICAL : DIRECTION.DIRECTION_HORIZONTAL;\n\t},\n\tisHorizontal(direction, userDirection) {\n\t\treturn direction === DIRECTION.DIRECTION_ALL ||\n\t\t\t(direction & DIRECTION.DIRECTION_HORIZONTAL &&\n\t\t\tuserDirection & DIRECTION.DIRECTION_HORIZONTAL);\n\t},\n\tisVertical(direction, userDirection) {\n\t\treturn direction === DIRECTION.DIRECTION_ALL ||\n\t\t\t(direction & DIRECTION.DIRECTION_VERTICAL &&\n\t\t\tuserDirection & DIRECTION.DIRECTION_VERTICAL);\n\t},\n\tgetPointOfIntersection(depaPos, destPos, min, max, circular, bounce) {\n\t\tconst boxLT = [min[0] - bounce[3], min[1] - bounce[0]];\n\t\tconst boxRB = [max[0] + bounce[1], max[1] + bounce[2]];\n\t\tconst toDestPos = destPos.concat();\n\n\t\tconst xd = destPos[0] - depaPos[0];\n\t\tconst yd = destPos[1] - depaPos[1];\n\n\t\tif (!circular[3]) {\n\t\t\ttoDestPos[0] = Math.max(boxLT[0], toDestPos[0]);\n\t\t} // left\n\t\tif (!circular[1]) {\n\t\t\ttoDestPos[0] = Math.min(boxRB[0], toDestPos[0]);\n\t\t} // right\n\t\ttoDestPos[1] = xd ? depaPos[1] + yd / xd * (toDestPos[0] - depaPos[0]) :\n\t\t\t\t\t\ttoDestPos[1];\n\n\t\tif (!circular[0]) {\n\t\t\ttoDestPos[1] = Math.max(boxLT[1], toDestPos[1]);\n\t\t} // up\n\t\tif (!circular[2]) {\n\t\t\ttoDestPos[1] = Math.min(boxRB[1], toDestPos[1]);\n\t\t} // down\n\t\ttoDestPos[0] = yd ? depaPos[0] + xd / yd * (toDestPos[1] - depaPos[1]) :\n\t\t\t\t\t\ttoDestPos[0];\n\t\treturn [\n\t\t\tMath.min(max[0], Math.max(min[0], toDestPos[0])),\n\t\t\tMath.min(max[1], Math.max(min[1], toDestPos[1])),\n\t\t];\n\t},\n\t// determine outside\n\tisOutside(pos, min, max) {\n\t\treturn pos[0] < min[0] || pos[1] < min[1] ||\n\t\t\tpos[0] > max[0] || pos[1] > max[1];\n\t},\n\t// from outside to outside\n\tisOutToOut(pos, destPos, min, max) {\n\t\treturn (pos[0] < min[0] || pos[0] > max[0] ||\n\t\t\tpos[1] < min[1] || pos[1] > max[1]) &&\n\t\t\t(destPos[0] < min[0] || destPos[0] > max[0] ||\n\t\t\tdestPos[1] < min[1] || destPos[1] > max[1]);\n\t},\n\tgetNextOffsetPos(speeds, deceleration) {\n\t\tconst normalSpeed = Math.sqrt(\n\t\t\tspeeds[0] * speeds[0] + speeds[1] * speeds[1]\n\t\t);\n\t\tconst duration = Math.abs(normalSpeed / -deceleration);\n\n\t\treturn [\n\t\t\tspeeds[0] / 2 * duration,\n\t\t\tspeeds[1] / 2 * duration,\n\t\t];\n\t},\n\tgetDurationFromPos(pos, deceleration) {\n\t\tconst normalPos = Math.sqrt(pos[0] * pos[0] + pos[1] * pos[1]);\n\t\tconst duration = Math.sqrt(\n\t\t\tnormalPos / deceleration * 2\n\t\t);\n\n\t\t// when duration is under 100, then value is zero\n\t\treturn duration < 100 ? 0 : duration;\n\t},\n\tisCircular(destPos, min, max, circular) {\n\t\treturn (circular[0] && destPos[1] < min[1]) ||\n\t\t\t\t(circular[1] && destPos[0] > max[0]) ||\n\t\t\t\t(circular[2] && destPos[1] > max[1]) ||\n\t\t\t\t(circular[3] && destPos[0] < min[0]);\n\t},\n\tgetCircularPos(pos, min, max, circular) {\n\t\tconst toPos = pos.concat();\n\t\tconst length = [max[0] - min[0], max[1] - min[1]];\n\n\t\tif (circular[0] && toPos[1] < min[1]) { // up\n\t\t\ttoPos[1] = (toPos[1] - min[1]) % length[1] + max[1];\n\t\t}\n\t\tif (circular[1] && toPos[0] > max[0]) { // right\n\t\t\ttoPos[0] = (toPos[0] - max[0]) % length[0] + min[0];\n\t\t}\n\t\tif (circular[2] && toPos[1] > max[1]) { // down\n\t\t\ttoPos[1] = (toPos[1] - max[1]) % length[1] + min[1];\n\t\t}\n\t\tif (circular[3] && toPos[0] < min[0]) { // left\n\t\t\ttoPos[0] = (toPos[0] - min[0]) % length[0] + max[0];\n\t\t}\n\n\t\ttoPos[0] = +toPos[0].toFixed(5);\n\t\ttoPos[1] = +toPos[1].toFixed(5);\n\t\treturn toPos;\n\t},\n};\n\nexport default Coordinate;\n\n\n\n// WEBPACK FOOTER //\n// src/Coordinate.js","import {window, document} from \"./browser\";\n\nfunction $(param, multi = false) {\n\tlet el;\n\n\tif (typeof param === \"string\") {\t// String (HTML, Selector)\n\t\t// check if string is HTML tag format\n\t\tconst match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t// creating element\n\t\tif (match) {\t // HTML\n\t\t\tconst dummy = document.createElement(\"div\");\n\n\t\t\tdummy.innerHTML = param;\n\t\t\tel = Array.prototype.slice.call(dummy.childNodes);\n\t\t} else {\t// Selector\n\t\t\tel = Array.prototype.slice.call(document.querySelectorAll(param));\n\t\t}\n\t\tif (!multi) {\n\t\t\tel = el.length >= 1 ? el[0] : undefined;\n\t\t}\n\t} else if (param.nodeName && param.nodeType === 1) {\t// HTMLElement\n\t\tel = param;\n\t} else if (window.jQuery && (param instanceof jQuery)) {\t// jQuery\n\t\tel = multi ? param.toArray() : param.get(0);\n\t}\n\n\treturn el;\n}\n\nclass MixinBuilder {\n\tconstructor(superclass) {\n\t\tthis.superclass = superclass || class {};\n\t}\n\twith(...mixins) {\n\t\treturn mixins.reduce((c, m) => m(c), this.superclass);\n\t}\n}\n\nconst Mixin = superclass => new MixinBuilder(superclass);\n\nexport {Mixin, $};\n\n\n\n// WEBPACK FOOTER //\n// src/utils.js","import Component from \"@egjs/component\";\nimport HammerManager from \"./HammerManager\";\nimport EventHandler from \"./eventHandler\";\nimport AnimationHandler from \"./animationHandler\";\nimport {DIRECTION} from \"./consts\";\nimport {Mixin} from \"./utils\";\n\n/**\n * A module used to change the information of user action entered by various input devices such as touch screen or mouse into logical coordinates within the virtual coordinate system. The coordinate information sorted by time events occurred is provided if animations are made by user actions. You can implement a user interface by applying the logical coordinates provided. For more information on the eg.MovableCoord module, see demos.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치로 전달 받은 사용자의 동작을 가상 좌표계의 논리적 좌표로 변경하는 모듈. 사용자의 동작으로 애니메이션이 일어나면 시간순으로 변경되는 좌표 정보도 제공한다. 변경된 논리적 좌표를 반영해 UI를 구현할 수 있다. eg.MovableCoord 모듈의 자세한 작동 방식은 데모를 참고한다.\n * @alias eg.MovableCoord\n * @extends eg.Component\n *\n * @codepen {\"id\":\"jPPqeR\", \"ko\":\"MovableCoord Cube 예제\", \"en\":\"MovableCoord Cube example\", \"collectionId\":\"AKpkGW\", \"height\": 403}\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nconst MovableCoord = class MovableCoord\nextends Mixin(Component).with(EventHandler, AnimationHandler) {\n\t/**\n\t * @param {Object} options The option object of the eg.MovableCoord module<ko>eg.MovableCoord 모듈의 옵션 객체</ko>\n\t * @param {Array} options.min The minimum value of X and Y coordinates <ko>좌표계의 최솟값</ko>\n\t * @param {Number} [options.min.0=0] The X coordinate of the minimum <ko>최소 x좌표</ko>\n\t * @param {Number} [options.min.1=0] The Y coordinate of the minimum <ko>최소 y좌표</ko>\n\t *\n\t * @param {Array} options.max The maximum value of X and Y coordinates <ko>좌표계의 최댓값</ko>\n\t * @param {Number} [options.max.0=100] The X coordinate of the maximum<ko>최대 x좌표</ko>\n\t * @param {Number} [options.max.1=100] The Y coordinate of the maximum<ko>최대 y좌표</ko>\n\t *\n\t * @param {Array} options.bounce The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n\t * @param {Boolean} [options.bounce.0=10] The size of top area <ko>위쪽 바운스 영역의 크기</ko>\n\t * @param {Boolean} [options.bounce.1=10] The size of right area <ko>오른쪽 바운스 영역의 크기</ko>\n\t * @param {Boolean} [options.bounce.2=10] The size of bottom area <ko>아래쪽 바운스 영역의 크기</ko>\n\t * @param {Boolean} [options.bounce.3=10] The size of left area <ko>왼쪽 바운스 영역의 크기</ko>\n\t *\n\t * @param {Array} options.margin The size of accessible space outside the coordinate area. If an element is dragged outside the coordinate area and then dropped, the coordinates of the element are returned back into the coordinate area. The size of margins that can be exceeded <ko>−\t좌표 영역을 넘어 이동할 수 있는 바깥 영역의 크기. 사용자가 좌표를 바깥 영역까지 끌었다가 놓으면 좌표가 좌표 영역 안으로 들어온다.</ko>\n\t * @param {Boolean} [options.margin.0=0] The size of top margin <ko>위쪽 바깥 영역의 크기</ko>\n\t * @param {Boolean} [options.margin.1=0] The size of right margin <ko>오른쪽 바깥 영역의 크기</ko>\n\t * @param {Boolean} [options.margin.2=0] The size of bottom margin <ko>아래쪽 바깥 영역의 크기</ko>\n\t * @param {Boolean} [options.margin.3=0] The size of left margin <ko>왼쪽 바깥 영역의 크기</ko>\n\t * @param {Array} options.circular Indicates whether a circular element is available. If it is set to \"true\" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. 'true'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n\t * @param {Boolean} [options.circular.0=false] Indicates whether to circulate to top <ko>위로 순환 여부</ko>\n\t * @param {Boolean} [options.circular.1=false] Indicates whether to circulate to right <ko>오른쪽으로 순환 여부</ko>\n\t * @param {Boolean} [options.circular.2=false] Indicates whether to circulate to bottom  <ko>아래로 순환 여부</ko>\n\t * @param {Boolean} [options.circular.3=false] Indicates whether to circulate to left  <ko>왼쪽으로 순환 여부</ko>\n\t *\n\t * @param {Function} [options.easing=easing.easeOutCubic] The easing function to apply to an animation. If you want to try a different easing function, use the jQuery easing plugin ({@link http://gsgd.co.uk/sandbox/jquery/easing}) or the jQuery UI easing library ({@link https://jqueryui.com/easing}) <ko>애니메이션에 적용할 easing 함수. 다른 easing 함수를 사용하려면 jQuery easing 플러그인({@link http://gsgd.co.uk/sandbox/jquery/easing})이나, jQuery UI easing 라이브러리({@link https://jqueryui.com/easing})를 사용한다</ko>\n\t * @param {Number} [options.maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n\t * @param {Number} [options.deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n\t **/\n\tconstructor(options) {\n\t\tsuper();\n\t\tObject.assign(this.options = {\n\t\t\tmin: [0, 0],\n\t\t\tmax: [100, 100],\n\t\t\tbounce: [10, 10, 10, 10],\n\t\t\tmargin: [0, 0, 0, 0],\n\t\t\tcircular: [false, false, false, false],\n\t\t\teasing: function easeOutCubic(x) {\n\t\t\t\treturn 1 - Math.pow(1 - x, 3);\n\t\t\t},\n\t\t\tmaximumDuration: Infinity,\n\t\t\tdeceleration: 0.0006,\n\t\t}, options);\n\t\tthis._reviseOptions();\n\t\tthis._hammerManager = new HammerManager();\n\t\tthis._pos = this.options.min.concat();\n\t}\n\n\t/**\n\t * Registers an element to use the eg.MovableCoord module.\n\t * @ko eg.MovableCoord 모듈을 사용할 엘리먼트를 등록한다\n\t * @param {HTMLElement|String|jQuery} element An element to use the eg.MovableCoord module<ko>−\teg.MovableCoord 모듈을 사용할 엘리먼트</ko>\n\t * @param {Object} options The option object of the bind() method <ko>bind() 메서드의 옵션 객체</ko>\n\t * @param {Number} [options.direction=eg.MovableCoord.DIRECTION_ALL] Coordinate direction that a user can move<br>- eg.MovableCoord.DIRECTION_ALL: All directions available.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: Horizontal direction only.<br>- eg.MovableCoord.DIRECTION_VERTICAL: Vertical direction only<ko>사용자의 동작으로 움직일 수 있는 좌표의 방향.<br>- eg.MovableCoord.DIRECTION_ALL: 모든 방향으로 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: 가로 방향으로만 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_VERTICAL: 세로 방향으로만 움직일 수 있다.</ko>\n\t * @param {Array} options.scale Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n\t * @param {Number} [options.scale.0=1] X-axis scale <ko>x축 배율</ko>\n\t * @param {Number} [options.scale.1=1] Y-axis scale <ko>y축 배율</ko>\n\t * @param {Number} [options.thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n\t * @param {Number} [options.interruptable=true] Indicates whether an animation is interruptible.<br>- true: It can be paused or stopped by user action or the API.<br>- false: It cannot be paused or stopped by user action or the API while it is running.<ko>진행 중인 애니메이션 중지 가능 여부.<br>- true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.<br>- false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n\t * @param {Array} [options.inputType] Types of input devices. (default: [\"touch\", \"mouse\"])<br>- touch: Touch screen<br>- mouse: Mouse <ko>입력 장치 종류.(기본값: [\"touch\", \"mouse\"])<br>- touch: 터치 입력 장치<br>- mouse: 마우스</ko>\n\t *\n\t * @return {eg.MovableCoord} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n\t */\n\tbind(element, options) {\n\t\tthis._hammerManager.add(element, options, this);\n\t\treturn this;\n\t}\n\t/**\n\t * Detaches an element using the eg.MovableCoord module.\n\t * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트를 해제한다\n\t * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is detached<ko>eg.MovableCoord 모듈을 해제할 엘리먼트</ko>\n\t * @return {eg.MovableCoord} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tunbind(element) {\n\t\tthis._hammerManager.remove(element);\n\t\treturn this;\n\t}\n\n\t/**\n\t * get a hammer instance from elements using the eg.MovableCoord module.\n\t * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트에서 hammer 객체를 얻는다\n\t * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is using<ko>eg.MovableCoord 모듈을 사용하는 엘리먼트</ko>\n\t * @return {external:Hammer|null} An instance of Hammer.JS<ko>Hammer.JS의 인스턴스</ko>\n\t */\n\tgetHammer(element) {\n\t\treturn this._hammerManager.getHammer(element);\n\t}\n\n\t/**\n\t * Enables input devices\n\t * @ko 입력 장치를 사용할 수 있게 한다\n\t * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n\t * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n\t*/\n\tenableInput(element) {\n\t\treturn this._hammerManager.inputControl(true, element);\n\t}\n\n\t/**\n\t * Disables input devices\n\t * @ko 입력 장치를 사용할 수 없게 한다.\n\t * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n\t * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n\t */\n\tdisableInput(element) {\n\t\treturn this._hammerManager.inputControl(false, element);\n\t}\n\n\t/**\n\t * set up 'css' expression\n\t * @private\n\t */\n\t_reviseOptions() {\n\t\tlet key;\n\n\t\t[\"bounce\", \"margin\", \"circular\"].forEach(v => {\n\t\t\tkey = this.options[v];\n\t\t\tif (key != null) {\n\t\t\t\tif (key.constructor === Array) {\n\t\t\t\t\tthis.options[v] = key.length === 2 ?\n\t\t\t\t\t\tkey.concat(key) : key.concat();\n\t\t\t\t} else if (/string|number|boolean/.test(typeof key)) {\n\t\t\t\t\tthis.options[v] = [key, key, key, key];\n\t\t\t\t} else {\n\t\t\t\t\tthis.options[v] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the current position of the logical coordinates.\n\t * @ko 논리적 좌표의 현재 위치를 반환한다\n\t * @return {Array} pos <ko>좌표</ko>\n\t * @return {Number} pos.0 The X coordinate <ko>x 좌표</ko>\n\t * @return {Number} pos.1 The Y coordinate <ko>y 좌표</ko>\n\t */\n\tget() {\n\t\treturn this._pos.concat();\n\t}\n\n\t/**\n\t * Destroys elements, properties, and events used in a module.\n\t * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n\t */\n\tdestroy() {\n\t\tthis.off();\n\t\tthis._hammerManager.destroy();\n\t}\n};\n\nObject.assign(MovableCoord, DIRECTION);\nexport default MovableCoord;\n\n\n\n// WEBPACK FOOTER //\n// src/MovableCoord.js","import Hammer from \"hammerjs\";\nimport {$} from \"./utils\";\nimport {DIRECTION, UNIQUEKEY, SUPPORT_TOUCH} from \"./consts\";\n\n/**\n * Hammer helps you add support for touch gestures to your page\n *\n * @external Hammer\n * @see {@link http://hammerjs.github.io|Hammer.JS}\n * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.MovableCoord module removes all default CSS properties provided by Hammer.JS\n */\nif (typeof Hammer === \"undefined\") {\n\tthrow new Error(`The Hammerjs must be loaded before eg.MovableCoord.\\nhttp://hammerjs.github.io/`);\n}\n\nexport default class HammerManager {\n\tconstructor() {\n\t\tthis._hammers = {};\n\t}\n\n\tstatic createHammer(el, bindOptions, inputClass, handler) {\n\t\ttry {\n\t\t\t// create Hammer\n\t\t\treturn HammerManager.attachHammerEvents(new Hammer.Manager(el, {\n\t\t\t\trecognizers: [\n\t\t\t\t\t[\n\t\t\t\t\t\tHammer.Pan, {\n\t\t\t\t\t\t\tdirection: bindOptions.direction,\n\t\t\t\t\t\t\tthreshold: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t],\n\n\t\t\t\t// css properties were removed due to usablility issue\n\t\t\t\t// http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n\t\t\t\tcssProps: {\n\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t\ttouchSelect: \"none\",\n\t\t\t\t\ttouchCallout: \"none\",\n\t\t\t\t\tuserDrag: \"none\",\n\t\t\t\t},\n\t\t\t\tinputClass,\n\t\t\t}), bindOptions, handler);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tstatic attachHammerEvents(hammer, options, handler) {\n\t\tconst enable = hammer.get(\"pan\").options.enable;\n\n\t\t/* eslint-disable no-underscore-dangle */\n\t\treturn hammer\n\t\t\t.on(\"hammer.input\", e => {\n\t\t\t\tif (e.isFirst) {\n\t\t\t\t\t// apply options each\n\t\t\t\t\thandler._setCurrentTarget(hammer, options);\n\t\t\t\t\tenable && handler._start(e);\n\t\t\t\t} else if (e.isFinal) {\n\t\t\t\t\t// substitute .on(\"panend tap\", this._panend); Because it(tap, panend) cannot catch vertical(horizontal) movement on HORIZONTAL(VERTICAL) mode.\n\t\t\t\t\tenable && handler._end(e);\n\t\t\t\t}\n\t\t\t}).on(\"panstart panmove\", e => handler._move(e));\n\t\t/* eslint-enable no-underscore-dangle */\n\t}\n\n\tstatic detachHammerEvents(hammer) {\n\t\thammer.off(\"hammer.input panstart panmove panend\");\n\t}\n\n\tstatic convertInputType(inputType = []) {\n\t\tlet hasTouch = false;\n\t\tlet hasMouse = false;\n\t\tconst inputs = inputType || [];\n\n\t\tinputs.forEach(v => {\n\t\t\tswitch (v) {\n\t\t\t\tcase \"mouse\" : hasMouse = true; break;\n\t\t\t\tcase \"touch\" : hasTouch = SUPPORT_TOUCH;\n\t\t\t\t// no default\n\t\t\t}\n\t\t});\n\t\treturn (hasTouch && Hammer.TouchInput) ||\n\t\t\t(hasMouse && Hammer.MouseInput) || null;\n\t}\n\n\tadd(element, options, handler) {\n\t\tconst el = $(element);\n\t\tlet keyValue = el.getAttribute(UNIQUEKEY);\n\t\tconst bindOptions = Object.assign({\n\t\t\tdirection: DIRECTION.DIRECTION_ALL,\n\t\t\tscale: [1, 1],\n\t\t\tthresholdAngle: 45,\n\t\t\tinterruptable: true,\n\t\t\tinputType: [\"touch\", \"mouse\"],\n\t\t}, options);\n\t\tconst inputClass = HammerManager.convertInputType(bindOptions.inputType);\n\n\t\tif (!inputClass) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (keyValue) {\n\t\t\tthis._hammers[keyValue].hammer.destroy();\n\t\t} else {\n\t\t\tkeyValue = Math.round(Math.random() * new Date().getTime());\n\t\t}\n\t\tthis._hammers[keyValue] = {\n\t\t\thammer: HammerManager.createHammer(\n\t\t\t\tel,\n\t\t\t\tbindOptions,\n\t\t\t\tinputClass,\n\t\t\t\thandler\n\t\t\t),\n\t\t\tel,\n\t\t\toptions: bindOptions,\n\t\t};\n\t\tel.setAttribute(UNIQUEKEY, keyValue);\n\t}\n\n\tremove(element) {\n\t\tconst el = $(element);\n\t\tconst key = el.getAttribute(UNIQUEKEY);\n\n\t\tif (key) {\n\t\t\tconst hammer = this._hammers[key].hammer;\n\n\t\t\tHammerManager.detachHammerEvents(hammer);\n\t\t\thammer.destroy();\n\t\t\tdelete this._hammers[key];\n\t\t\tel.removeAttribute(UNIQUEKEY);\n\t\t}\n\t}\n\n\tgetHammer(element) {\n\t\tconst data = this.get(element);\n\n\t\treturn data ? data.hammer : null;\n\t}\n\n\tget(element) {\n\t\tconst el = $(element);\n\t\tconst key = el ? el.getAttribute(UNIQUEKEY) : null;\n\n\t\tif (key && this._hammers[key]) {\n\t\t\treturn this._hammers[key];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tinputControl(isEnable, element) {\n\t\tconst option = {\n\t\t\tenable: isEnable,\n\t\t};\n\n\t\tif (element) {\n\t\t\tconst hammer = this.getHammer(element);\n\n\t\t\thammer && hammer.get(\"pan\").set(option);\n\t\t} else { // for multi\n\t\t\tfor (const p in this._hammers) {\n\t\t\t\tthis._hammers[p].hammer.get(\"pan\").set(option);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tdestroy() {\n\t\tfor (const p in this._hammers) {\n\t\t\tthis.remove(this._hammers[p].el);\n\t\t}\n\t\tthis._hammers = {};\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// src/HammerManager.js","import Coordinate from \"./Coordinate\";\nimport {window} from \"./browser\";\n\nexport default superclass => class extends superclass {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._raf = null;\n\t\tthis._animateParam = null;\n\t\tthis._animationEnd = this._animationEnd.bind(this);\t// for caching\n\t\tthis._restore = this._restore.bind(this);\t// for caching\n\t}\n\n\t_grab(min, max, circular) {\n\t\tif (this._animateParam) {\n\t\t\tconst orgPos = this.get();\n\n\t\t\tconst pos = Coordinate.getCircularPos(this.get(), min, max, circular);\n\n\t\t\tif (pos[0] !== orgPos[0] || pos[1] !== orgPos[1]) {\n\t\t\t\tthis._setPosAndTriggerChange(pos, true);\n\t\t\t}\n\t\t\tthis._animateParam = null;\n\t\t\tthis._raf && window.cancelAnimationFrame(this._raf);\n\t\t\tthis._raf = null;\n\t\t\tthis.trigger(\"animationEnd\");\n\t\t}\n\t}\n\n\t_prepareParam(absPos, duration, hammerEvent) {\n\t\tconst pos = this.get();\n\t\tconst min = this.options.min;\n\t\tconst max = this.options.max;\n\t\tconst circular = this.options.circular;\n\t\tconst maximumDuration = this.options.maximumDuration;\n\t\tlet destPos = Coordinate.getPointOfIntersection(\n\t\t\tpos, absPos, min, max, circular, this.options.bounce);\n\n\t\tdestPos = Coordinate.isOutToOut(pos, destPos, min, max) ? pos : destPos;\n\n\t\tconst distance = [\n\t\t\tMath.abs(destPos[0] - pos[0]),\n\t\t\tMath.abs(destPos[1] - pos[1]),\n\t\t];\n\t\tlet newDuration = duration == null ? Coordinate.getDurationFromPos(\n\t\t\tdistance, this.options.deceleration) : duration;\n\n\t\tnewDuration = maximumDuration > newDuration ? newDuration : maximumDuration;\n\t\treturn {\n\t\t\tdepaPos: pos.concat(),\n\t\t\tdestPos: destPos.concat(),\n\t\t\tisBounce: Coordinate.isOutside(destPos, min, max),\n\t\t\tisCircular: Coordinate.isCircular(absPos, min, max, circular),\n\t\t\tduration: newDuration,\n\t\t\tdistance,\n\t\t\thammerEvent: hammerEvent || null,\n\t\t\tdone: this._animationEnd,\n\t\t};\n\t}\n\n\t_restore(complete, hammerEvent) {\n\t\tconst pos = this.get();\n\t\tconst min = this.options.min;\n\t\tconst max = this.options.max;\n\n\t\tthis._animate(this._prepareParam([\n\t\t\tMath.min(max[0], Math.max(min[0], pos[0])),\n\t\t\tMath.min(max[1], Math.max(min[1], pos[1])),\n\t\t], null, hammerEvent), complete);\n\t}\n\n\t_animationEnd() {\n\t\tthis._animateParam = null;\n\t\tconst orgPos = this.get();\n\t\tconst nextPos = Coordinate.getCircularPos([\n\t\t\tMath.round(orgPos[0]),\n\t\t\tMath.round(orgPos[1]),\n\t\t], this.options.min, this.options.max, this.options.circular);\n\n\t\tthis.setTo(...nextPos);\n\t\tthis._setInterrupt(false);\n\t\t/**\n\t\t * This event is fired when animation ends.\n\t\t * @ko 에니메이션이 끝났을 때 발생한다.\n\t\t * @name eg.MovableCoord#animationEnd\n\t\t * @event\n\t\t */\n\t\tthis.trigger(\"animationEnd\");\n\t}\n\n\t_animate(param, complete) {\n\t\tthis._animateParam = Object.assign({}, param);\n\t\tthis._animateParam.startTime = new Date().getTime();\n\t\tif (param.duration) {\n\t\t\tconst info = this._animateParam;\n\t\t\tconst self = this;\n\n\t\t\t(function loop() {\n\t\t\t\t/* eslint-disable no-underscore-dangle */\n\t\t\t\tself._raf = null;\n\t\t\t\tif (self._frame(info) >= 1) {\n\t\t\t\t\t// deferred.resolve();\n\t\t\t\t\tcomplete();\n\t\t\t\t\treturn;\n\t\t\t\t} // animationEnd\n\t\t\t\tself._raf = window.requestAnimationFrame(loop);\n\t\t\t\t/* eslint-enable no-underscore-dangle */\n\t\t\t})();\n\t\t} else {\n\t\t\tthis._setPosAndTriggerChange(param.destPos, false);\n\t\t\tcomplete();\n\t\t}\n\t}\n\n\t_animateTo(absPos, duration, hammerEvent) {\n\t\tconst param = this._prepareParam(absPos, duration, hammerEvent);\n\t\tconst retTrigger = this.trigger(\"animationStart\", param);\n\n\t\t// You can't stop the 'animationStart' event when 'circular' is true.\n\t\tif (param.isCircular && !retTrigger) {\n\t\t\tthrow new Error(\n\t\t\t\t\"You can't stop the 'animation' event when 'circular' is true.\"\n\t\t\t);\n\t\t}\n\n\t\tif (retTrigger) {\n\t\t\tconst queue = [];\n\t\t\tconst dequeue = function() {\n\t\t\t\tconst task = queue.shift();\n\n\t\t\t\ttask && task.call(this);\n\t\t\t};\n\n\t\t\tif (param.depaPos[0] !== param.destPos[0] ||\n\t\t\t\tparam.depaPos[1] !== param.destPos[1]) {\n\t\t\t\tqueue.push(() => this._animate(param, dequeue));\n\t\t\t}\n\t\t\tif (Coordinate.isOutside(\n\t\t\t\tparam.destPos, this.options.min, this.options.max)) {\n\t\t\t\tqueue.push(() => this._restore(dequeue, hammerEvent));\n\t\t\t}\n\t\t\tqueue.push(() => this._animationEnd());\n\t\t\tdequeue();\n\t\t}\n\t}\n\n\t// animation frame (0~1)\n\t_frame(param) {\n\t\tconst curTime = new Date() - param.startTime;\n\t\tconst easingPer = this._easing(curTime / param.duration);\n\t\tlet pos = [param.depaPos[0], param.depaPos[1]];\n\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t(pos[i] !== param.destPos[i]) &&\n\t\t\t(pos[i] += (param.destPos[i] - pos[i]) * easingPer);\n\t\t}\n\t\tpos = Coordinate.getCircularPos(\n\t\t\tpos, this.options.min, this.options.max, this.options.circular);\n\t\tthis._setPosAndTriggerChange(pos, false);\n\t\treturn easingPer;\n\t}\n\n\t// trigger 'change' event\n\t_setPosAndTriggerChange(position, holding, e) {\n\t\t/**\n\t\t * This event is fired when coordinate changes.\n\t\t * @ko 좌표가 변경됐을 때 발생하는 이벤트\n\t\t * @name eg.MovableCoord#change\n\t\t * @event\n\t\t *\n\t\t * @param {Object} param The object of data to be sent when the event is fired <ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n\t\t * @param {Array} param.position departure coordinate  <ko>좌표</ko>\n\t\t * @param {Number} param.position.0 The X coordinate <ko>x 좌표</ko>\n\t\t * @param {Number} param.pos.1 The Y coordinate <ko>y 좌표</ko>\n\t\t * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n\t\t * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n\t\t *\n\t\t */\n\t\tthis._pos = position.concat();\n\t\tthis.trigger(\"change\", {\n\t\t\tpos: position.concat(),\n\t\t\tholding,\n\t\t\thammerEvent: e || null,\n\t\t});\n\t}\n\n\t_easing(p) {\n\t\treturn p > 1 ? 1 : this.options.easing(p);\n\t}\n\n\t/**\n\t * Moves an element to specific coordinates.\n\t * @ko 좌표를 이동한다.\n\t * @method eg.MovableCoord#setTo\n\t * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n\t * @param {Number} y The Y coordinate to move to  <ko>이동할 y좌표</ko>\n\t * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n\t */\n\tsetTo(x, y, duration = 0) {\n\t\tlet toX = x;\n\t\tlet toY = y;\n\t\tconst min = this.options.min;\n\t\tconst max = this.options.max;\n\t\tconst circular = this.options.circular;\n\n\t\tthis._grab(min, max, circular);\n\t\tconst pos = this.get();\n\n\t\tif (x === pos[0] && y === pos[1]) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._setInterrupt(true);\n\t\tif (x !== pos[0]) {\n\t\t\tif (!circular[3]) {\n\t\t\t\ttoX = Math.max(min[0], toX);\n\t\t\t}\n\t\t\tif (!circular[1]) {\n\t\t\t\ttoX = Math.min(max[0], toX);\n\t\t\t}\n\t\t}\n\t\tif (y !== pos[1]) {\n\t\t\tif (!circular[0]) {\n\t\t\t\ttoY = Math.max(min[1], toY);\n\t\t\t}\n\t\t\tif (!circular[2]) {\n\t\t\t\ttoY = Math.min(max[1], toY);\n\t\t\t}\n\t\t}\n\t\tif (duration) {\n\t\t\tthis._animateTo([toX, toY], duration);\n\t\t} else {\n\t\t\tthis._pos = Coordinate.getCircularPos([toX, toY], min, max, circular);\n\t\t\tthis._setPosAndTriggerChange(this._pos, false);\n\t\t\tthis._setInterrupt(false);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves an element from the current coordinates to specific coordinates. The change event is fired when the method is executed.\n\t * @ko 현재 좌표를 기준으로 좌표를 이동한다. 메서드가 실행되면 change 이벤트가 발생한다\n\t * @method eg.MovableCoord#setBy\n\t * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n\t * @param {Number} y The Y coordinate to move to <ko>이동할 y좌표</ko>\n\t * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n\t * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n\t */\n\tsetBy(x, y, duration = 0) {\n\t\treturn this.setTo(\n\t\t\tx != null ? this._pos[0] + x : this._pos[0],\n\t\t\ty != null ? this._pos[1] + y : this._pos[1],\n\t\t\tduration\n\t\t);\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// src/animationHandler.js","import Coordinate from \"./Coordinate\";\nimport {DIRECTION} from \"./consts\";\n\nexport default superclass => class extends superclass {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._status = {\n\t\t\tgrabOutside: false,\t\t// check whether user's action started on outside\n\t\t\tcurrentHammer: null,\t\t// current hammer instance\n\t\t\tcurrentOptions: {},\t\t// current bind options\n\t\t\tmoveDistance: null,\t\t// a position of the first user's action\n\t\t\tprevented: false,\t\t//  check whether the animation event was prevented\n\t\t};\n\t}\n\n\t_setCurrentTarget(hammer, options) {\n\t\tthis._status.currentOptions = options;\n\t\tthis._status.currentHanmmer = hammer;\n\t}\n\n\t// panstart event handler\n\t_start(e) {\n\t\tif (!this._status.currentOptions.interruptable && this._status.prevented) {\n\t\t\treturn;\n\t\t}\n\t\tconst pos = this.get();\n\t\tconst min = this.options.min;\n\t\tconst max = this.options.max;\n\n\t\tthis._setInterrupt(true);\n\t\tthis._grab(min, max, this.options.circular);\n\t\t/**\n\t\t * This event is fired when a user holds an element on the screen of the device.\n\t\t * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n\t\t * @event eg.MovableCoord#hold\n\t\t * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n\t\t * @param {Array} param.pos coordinate <ko>좌표 정보</ko>\n\t\t * @param {Number} param.pos.0 The X coordinate<ko>x 좌표</ko>\n\t\t * @param {Number} param.pos.1 The Y coordinate<ko>y 좌표</ko>\n\t\t * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n\t\t *\n\t\t */\n\t\tthis.trigger(\"hold\", {\n\t\t\tpos: pos.concat(),\n\t\t\thammerEvent: e,\n\t\t});\n\n\t\tthis._status.moveDistance = pos.concat();\n\t\tthis._status.grabOutside = Coordinate.isOutside(pos, min, max);\n\t}\n\n\t// panmove event handler\n\t_move(e) {\n\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\treturn;\n\t\t}\n\t\tlet pos = this.get(true);\n\t\tconst min = this.options.min;\n\t\tconst max = this.options.max;\n\t\tconst bounce = this.options.bounce;\n\t\tconst margin = this.options.margin;\n\t\tconst currentOptions = this._status.currentOptions;\n\t\tconst direction = currentOptions.direction;\n\t\tconst scale = currentOptions.scale;\n\t\tconst userDirection = Coordinate.getDirectionByAngle(\n\t\t\te.angle, currentOptions.thresholdAngle);\n\t\tconst out = [\n\t\t\tmargin[0] + bounce[0],\n\t\t\tmargin[1] + bounce[1],\n\t\t\tmargin[2] + bounce[2],\n\t\t\tmargin[3] + bounce[3],\n\t\t];\n\t\tlet prevent = false;\n\n\t\t// not support offset properties in Hammerjs - start\n\t\tconst prevInput = this._status.currentHanmmer.session.prevInput;\n\n\t\t/* eslint-disable no-param-reassign */\n\t\tif (prevInput) {\n\t\t\te.offsetX = e.deltaX - prevInput.deltaX;\n\t\t\te.offsetY = e.deltaY - prevInput.deltaY;\n\t\t} else {\n\t\t\te.offsetX = 0;\n\t\t\te.offsetY = 0;\n\t\t}\n\n\t\t// not support offset properties in Hammerjs - end\n\t\tif (Coordinate.isHorizontal(direction, userDirection)) {\n\t\t\tthis._status.moveDistance[0] += (e.offsetX * scale[0]);\n\t\t\tprevent = true;\n\t\t}\n\t\tif (Coordinate.isVertical(direction, userDirection)) {\n\t\t\tthis._status.moveDistance[1] += (e.offsetY * scale[1]);\n\t\t\tprevent = true;\n\t\t}\n\t\tif (prevent) {\n\t\t\te.srcEvent.preventDefault();\n\t\t\te.srcEvent.stopPropagation();\n\t\t}\n\t\te.preventSystemEvent = prevent;\n\t\t/* eslint-enable no-param-reassign */\n\n\t\tpos[0] = this._status.moveDistance[0];\n\t\tpos[1] = this._status.moveDistance[1];\n\t\tpos = Coordinate.getCircularPos(pos, min, max, this.options.circular);\n\n\t\t// from outside to inside\n\t\tif (this._status.grabOutside && !Coordinate.isOutside(pos, min, max)) {\n\t\t\tthis._status.grabOutside = false;\n\t\t}\n\n\t\t// when move pointer is held in outside\n\t\tlet tv;\n\t\tlet tn;\n\t\tlet tx;\n\n\t\tif (this._status.grabOutside) {\n\t\t\ttn = min[0] - out[3];\n\t\t\ttx = max[0] + out[1];\n\t\t\ttv = pos[0];\n\t\t\t/* eslint-disable no-nested-ternary */\n\t\t\tpos[0] = tv > tx ? tx : (tv < tn ? tn : tv);\n\t\t\ttn = min[1] - out[0];\n\t\t\ttx = max[1] + out[2];\n\t\t\ttv = pos[1];\n\t\t\tpos[1] = tv > tx ? tx : (tv < tn ? tn : tv);\n\t\t\t/* eslint-enable no-nested-ternary */\n\t\t} else {\n\t\t\t// when start pointer is held in inside\n\t\t\t// get a initialization slope value to prevent smooth animation.\n\t\t\tconst initSlope = this._easing(0.00001) / 0.00001;\n\n\t\t\tif (pos[1] < min[1]) { // up\n\t\t\t\ttv = (min[1] - pos[1]) / (out[0] * initSlope);\n\t\t\t\tpos[1] = min[1] - this._easing(tv) * out[0];\n\t\t\t} else if (pos[1] > max[1]) { // down\n\t\t\t\ttv = (pos[1] - max[1]) / (out[2] * initSlope);\n\t\t\t\tpos[1] = max[1] + this._easing(tv) * out[2];\n\t\t\t}\n\t\t\tif (pos[0] < min[0]) { // left\n\t\t\t\ttv = (min[0] - pos[0]) / (out[3] * initSlope);\n\t\t\t\tpos[0] = min[0] - this._easing(tv) * out[3];\n\t\t\t} else if (pos[0] > max[0]) { // right\n\t\t\t\ttv = (pos[0] - max[0]) / (out[1] * initSlope);\n\t\t\t\tpos[0] = max[0] + this._easing(tv) * out[1];\n\t\t\t}\n\t\t}\n\t\tthis._setPosAndTriggerChange(pos, true, e);\n\t}\n\n\t// panend event handler\n\t_end(e) {\n\t\tconst pos = this.get();\n\n\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort the animating post process when \"tap\" occurs\n\t\tif (e.distance === 0 /* e.type === \"tap\" */) {\n\t\t\tthis._setInterrupt(false);\n\t\t\tthis.trigger(\"release\", {\n\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\tdestPos: pos.concat(),\n\t\t\t\thammerEvent: e || null,\n\t\t\t});\n\t\t} else {\n\t\t\tconst direction = this._status.currentOptions.direction;\n\t\t\tconst scale = this._status.currentOptions.scale;\n\t\t\tlet vX = Math.abs(e.velocityX);\n\t\t\tlet vY = Math.abs(e.velocityY);\n\n\t\t\t!(direction & DIRECTION.DIRECTION_HORIZONTAL) && (vX = 0);\n\t\t\t!(direction & DIRECTION.DIRECTION_VERTICAL) && (vY = 0);\n\n\t\t\tconst offset = Coordinate.getNextOffsetPos([\n\t\t\t\tvX * (e.deltaX < 0 ? -1 : 1) * scale[0],\n\t\t\t\tvY * (e.deltaY < 0 ? -1 : 1) * scale[1],\n\t\t\t], this.options.deceleration);\n\t\t\tlet destPos = [pos[0] + offset[0], pos[1] + offset[1]];\n\n\t\t\tdestPos = Coordinate.getPointOfIntersection(pos, destPos,\n\t\t\t\tthis.options.min, this.options.max,\n\t\t\t\tthis.options.circular, this.options.bounce);\n\t\t\t/**\n\t\t\t * This event is fired when a user release an element on the screen of the device.\n\t\t\t * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n\t\t\t * @event eg.MovableCoord#release\n\t\t\t *\n\t\t\t * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n\t\t\t * @param {Array} param.depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표현재 </ko>\n\t\t\t * @param {Number} param.depaPos.0 The X coordinate <ko> x 좌표</ko>\n\t\t\t * @param {Number} param.depaPos.1 The Y coordinate <ko> y 좌표</ko>\n\t\t\t * @param {Array} param.destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n\t\t\t * @param {Number} param.destPos.0 The X coordinate <ko>x 좌표</ko>\n\t\t\t * @param {Number} param.destPos.1 The Y coordinate <ko>y 좌표</ko>\n\t\t\t * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다</ko>\n\t\t\t *\n\t\t\t */\n\t\t\tthis.trigger(\"release\", {\n\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\tdestPos,\n\t\t\t\thammerEvent: e || null,\n\t\t\t});\n\t\t\tif (pos[0] !== destPos[0] || pos[1] !== destPos[1]) {\n\t\t\t\tthis._animateTo(destPos, null, e || null);\n\t\t\t} else {\n\t\t\t\tthis._setInterrupt(false);\n\t\t\t}\n\t\t}\n\t\tthis._status.moveDistance = null;\n\t}\n\n\t_isInterrupting() {\n\t\t// when interruptable is 'true', return value is always 'true'.\n\t\treturn this._status.currentOptions.interruptable || this._status.prevented;\n\t}\n\n\t_setInterrupt(prevented) {\n\t\t!this._status.currentOptions.interruptable &&\n\t\t(this._status.prevented = prevented);\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// src/eventHandler.js","import MovableCoord from \"./MovableCoord\";\n\nMovableCoord.VERSION = \"2.0.0-rc.2\";\nmodule.exports = MovableCoord;\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"@egjs/component\",\"commonjs2\":\"@egjs/component\",\"amd\":\"@egjs/component\",\"root\":[\"eg\",\"Component\"]}\n// module id = 9\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"hammerjs\",\"commonjs2\":\"hammerjs\",\"amd\":\"hammerjs\",\"root\":\"Hammer\"}\n// module id = 10\n// module chunks = 0 1"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;;AChEA;AACA;AACA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAEA;AACA;AACA;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7GA;AACA;AA+GA;;;;;;;;;;;;;AClHA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;ACzCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;AACA;;;;;;;;;AASA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAhBA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;AApDA;AAoEA;AACA;AACA;AACA;;;;;;;;AAvEA;AA8EA;AACA;AACA;AACA;AACA;;;;;;;;AAlFA;AAyFA;AACA;AACA;AACA;;;;;;;;AA5FA;AAmGA;AACA;AACA;AACA;;;;;;;;AAtGA;AA6GA;AACA;AACA;AACA;;;;;;AAhHA;AAoHA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAtIA;AA8IA;AACA;AACA;AACA;;;;;;AAjJA;AAsJA;AACA;AACA;AACA;AAzJA;AAAA;AACA;AA0JA;AACA;;;;;;;;;;;;;;AC5KA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA/JA;;;;;;;;;;;;;;AChBA;AACA;;;AAAA;AACA;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAvDA;AAyDA;AACA;AACA;AACA;AACA;AAIA;AACA;AAlEA;AAoEA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;AAMA;AACA;AACA;AArFA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7GA;AA8GA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhJA;AAgJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAhKA;AAgKA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AArLA;AAuLA;AACA;AACA;AACA;;;;;;;;;;;AA1LA;AAmMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AA5OA;AAqPA;AACA;AAAA;AAKA;AACA;AA5PA;AAAA;AAAA;AACA;;;;;;;;;;;;ACJA;AACA;;;AAAA;AACA;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArJA;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjNA;AAmNA;AACA;AACA;AACA;AAtNA;AAwNA;AAEA;AACA;AA3NA;AAAA;AAAA;AACA;;;;;;;;;;ACJA;AACA;;;;;AACA;AACA;;;;;;ACHA;;;;;;ACAA;;;;A","sourceRoot":""}